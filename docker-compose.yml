version: '3'

services:
  nginx:
    # restart: always
    build: ./nginx
    ports:
      - "80:80"
      
    volumes:
      - /data/www/build:/data/www/build
      - /data/www/audio:/data/www/audio
    # networks: 
    #   - webnet
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - web

  web:
    # restart: always
    build: ./web
    expose:
      - "8000"
    command: gunicorn -w 2 -b :8000 --chdir ./silkaudio  silkaudio.wsgi
    # networks: 
    #   - webnet
    depends_on:
      - "postgres"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  postgres:
    restart: always
    build: ./postgresql
    volumes:
      - ./postgres/data:/var/lib/postgres/data
    ports:
      - "5432:5432"
    deploy:
      placement:
        constraints: [node.role == manager]

# volumes:
#   db-data:

# networks: 
#   webnet: